
/**
  * @directive ageValidation
  * @memberOf angular_module.ofkapp
  * @params month date and year 
  * @description to apply validation rules for age and display validation messages in html
  */
ofkapp.directive('dobValidation', function($parse) {
    return {
        require: 'ngModel',
        link: function (scope, element, attrs, ctrl) {
			if (!ctrl) return;
           
			var validator = function(value) {

				if (ctrl.$isEmpty(value)) {
                    ctrl.$setValidity('ageValidation', false);
					return false;
                } else {
						var transformedInput = value.replace(/[^0-9]/g, '');
						 var convertedValue = parseInt(value);
                         
						if(attrs.name == 'DD'){
							console.log("IN DD");
							  
							   //if it is a number and lenght greater than or equal to 2
							   if (transformedInput === value && value.length >= 2) {
									if(convertedValue < 1 || convertedValue > 31){ //if month is not greater than 12
											//isMonthValid = false;
											ctrl.$setValidity('dayValid', false);
											//e.preventDefault(); 
									}else{
											//isMonthValid = true;
											//dobDateArray[0] = value;
											ctrl.$setValidity('dayValid', true);
											element.next().focus(); 
									}
							   }else{
									  ctrl.$setValidity('dayValid', false);
									  ctrl.$setViewValue(transformedInput);
									  ctrl.$render();
							   }

						
						} //end of DD if looop

						if(attrs.name == 'MM'){
							console.log("IN MM");
						    	
							   var transformedInput = value.replace(/[^0-9]/g, '');
							   var convertedValue = parseInt(value);
							   //if it is a number and lenght greater than or equal to 2
							   if (transformedInput === value && value.length >= 2) {
									if(convertedValue < 1 || convertedValue > 12){ //if month is not greater than 12
											//isMonthValid = false;
											ctrl.$setValidity('monthValid', false);
											//e.preventDefault(); 
									}else{
											//isMonthValid = true;
											//dobDateArray[1] = value;
											ctrl.$setValidity('monthValid', true);
											element.next().focus(); 
									}
							   }else{
									  ctrl.$setValidity('monthValid', false);
									  ctrl.$setViewValue(transformedInput);
									  ctrl.$render();
							   }

						} //end of MM if looop

						if(attrs.name == 'YYYY'){
							console.log("IN YYYY");
							  var transformedInput = value.replace(/[^0-9]/g, '');
							   var convertedValue = parseInt(value);
							   
							   //if it is a number and lenght greater than or equal to 2
							   if (transformedInput === value && value.length >= 4) {
								  
								   var currentDate = new Date();
										console.log("getYear - "+currentDate.getFullYear());
									if(convertedValue < 1 || convertedValue > currentDate.getFullYear()){ //if month is not greater than 12
											//isMonthValid = false;
											ctrl.$setValidity('yearValid', false);
											//e.preventDefault(); 
									}else{
											//isMonthValid = true;
											//dobDateArray[2] = value;
											ctrl.$setValidity('yearValid', true);
											//element.next().focus(); 
									}
							   }else{
									  ctrl.$setValidity('yearValid', false);
									  ctrl.$setViewValue(transformedInput);
									  ctrl.$render();
							   }
						} //end of YYYY if looop

						//if every rule is success full return true
						//ctrl.$setValidity('ageValidation', isAgeValid);
					
							return transformedInput;	
					
				}//end of if
               
            };// end of validator
            ctrl.$parsers.unshift(validator);
        }// end of link
    };// end of return

});// end of directive


/**
  * @directive ageValidation
  * @memberOf angular_module.ofkapp
  * @params month date and year 
  * @description to apply validation rules for age and display validation messages in html
  */
ofkapp.directive('ageValidation', function($parse) {
    return {
        require: '^?form',
        link: function (scope, element, attrs, ctrl) {
			
			if (!ctrl) return; //if ctrl is null or undefined
			if (!attrs.dob) return;  //if attrs is null or undefined

			var ofkModel = JSON.parse(attrs.dob);
			//var secondDate = new Date();
			if(!ofkModel) return;  //if ofkModel is null or undefined
			if(!ofkModel.YYYY) return; //if YYYY is null or undefined
			if(!ofkModel.MM) return;  //if MM is null or undefined
			if(!ofkModel.DD) return;  //if DD is null or undefined
			var dob = ofkModel.YYYY + '-' + ofkModel.MM + '-' +  ofkModel.DD;  // DATE FORMAT IN YYYY-MM-DD
			var years = moment().diff(dstring, 'years'); //get no of years using moment library

			if(years < 18) 
				scope.$parent.isAgeValid = true;
			else
				scope.$parent.isAgeValid = false;
							
            
        }// end of link
    };// end of return

});// end of directive
